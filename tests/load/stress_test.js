import http from 'k6/http';
import { check, sleep } from 'k6';
import { SharedArray } from 'k6/data';

// --- üîπ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ù–ê–ì–†–£–ó–ö–ò ---
export const options = {
  stages: [
    { duration: '1m', target: 100 },   // –†–∞–∑–æ–≥—Ä–µ–≤ –¥–æ 100 RPS –∑–∞ 1 –º–∏–Ω—É—Ç—É
    { duration: '3m', target: 1000 },  // –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ 1000 RPS –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç
    { duration: '1m', target: 0 },     // –ü–ª–∞–≤–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏
],
  thresholds: {
    http_req_duration: ['p(95)<800'], // 95% –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è < 800 –º—Å
    http_req_failed: ['rate<0.05']    // –û—à–∏–±–∫–∏ < 5%
  }
};

// --- üîπ 1. –°–û–ó–î–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô ---
export function setup() {
  let users = [];
  const totalUsers = 1000; // –°–æ–∑–¥–∞–¥–∏–º 20 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

  for (let i = 1; i <= totalUsers; i++) {
    const username = `testuser_${i}`;
    const password = 'default_pass';

    // üîπ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    let authRes = http.post(
      `${__ENV.API_URL}/api/auth`,
      JSON.stringify({ username, password }),
      { headers: { 'Content-Type': 'application/json' } }
    );

    if (authRes.status === 200) {
      let token = authRes.json('token');
      users.push({ username, token });
    }
    sleep(0.2); // ‚è≥ –î–∞–µ–º —Å–µ—Ä–≤–µ—Ä—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∑–∞–ø—Ä–æ—Å
  }

  return { users };
}

// --- üîπ 2. –û–°–ù–û–í–ù–û–ô –¢–ï–°–¢: –ü–ï–†–ï–í–û–î–´ ---
export default function(data) {
  const users = data.users;
  
  if (!users || users.length < 2) {
    console.error('‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∞!');
    return;
  }

  const sender = users[__VU % users.length];  
  let receiverIndex = (Math.floor(Math.random() * users.length));  
  if (receiverIndex === (__VU % users.length)) receiverIndex = (receiverIndex + 1) % users.length;
  const receiver = users[receiverIndex];

  const transferRes = http.post(
    `${__ENV.API_URL}/api/sendCoin`,
    JSON.stringify({ toUser: receiver.username, amount: 1 }), // üí∞ –£–º–µ–Ω—å—à–∏–ª —Å—É–º–º—É
    {
      headers: {
        'Authorization': `Bearer ${sender.token}`,
        'Content-Type': 'application/json'
      }
    }
  );

  check(transferRes, { '‚úÖ Transfer success': (r) => r.status === 200 });

  sleep(randomIntBetween(1, 3));
}
