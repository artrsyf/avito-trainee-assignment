name: Go CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Install golangci-lint
      run: |
        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.55.2

    - name: Run linter
      run: make lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Create docs directory
      run: mkdir -p docs

    - name: Run unit tests
      run: make unit_test

    - name: Generate coverage report
      run: make unit_cover

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: unit-coverage-report
        path: ./docs/unit_coverage.html

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Run integration tests
      run: |
        docker-compose -f ./docker/docker-compose.integration.yml up -d
        timeout 60s bash -c 'until docker-compose -f ./docker/docker-compose.integration.yml exec reward_service_postgres_integration pg_isready -U user; do sleep 2; done'
        docker-compose -f ./docker/docker-compose.integration.yml exec reward_service_redis_integration redis-cli ping
        go test -v ./tests/integration/
        docker-compose -f ./docker/docker-compose.integration.yml down --volumes --remove-orphans
          
      env:
        POSTGRES_URL: postgres://user:password@localhost:5432/reward_service_postgres_integration?sslmode=disable
        REDIS_URL: redis://localhost:6379/0

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Run e2e tests
      run: |
        docker-compose -f ./docker/docker-compose.integration.yml up -d
        timeout 60s bash -c 'until docker-compose -f ./docker/docker-compose.integration.yml exec reward_service_postgres_integration pg_isready -U user; do sleep 2; done'
        docker-compose -f ./docker/docker-compose.integration.yml exec reward_service_redis_integration redis-cli ping
        go test -v ./tests/e2e/
        docker-compose -f ./docker/docker-compose.integration.yml down --volumes --remove-orphans
      env:
        POSTGRES_URL: postgres://user:password@localhost:5432/reward_service_postgres_integration?sslmode=disable
        REDIS_URL: redis://localhost:6379/0